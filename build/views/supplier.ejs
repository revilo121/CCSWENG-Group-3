<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Suppliers</title>
    <link rel="stylesheet" href="/assets/supplier-style.css">
    <link rel="stylesheet" href="/assets/sidebar.css">
    <link rel="stylesheet" href="/assets/topbar.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <!-- Font links (optimized preconnect) -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@100;400;700&display=swap" rel="stylesheet">
</head>
<body>
  <%- include('partials/topbar', {username: username, role: role}) %>

    <div class="main-fb">
        <%- include('partials/sidebar') %>

        <div class="main-content">
          <h1>Suppliers</h1>

          <section class = "supplier-table">

            <div class="supplier-controls">
                <!-- Add Item Button -->
                <button class="addSupplierBtn" id="addSupplierBtn" ><i class="fas fa-plus"></i> New Supplier</button>
                <div class="search-bar">
                    <input type="text" id="searchInput" placeholder="Search supplier..." aria-label="Search inventory">
                    <i class="fas fa-search search-icon"></i>
                </div>

                
            </div>

            <div class="supplier-grid" id="supplierGrid">
                <% if (suppliers && suppliers.length > 0) { %>
                    <% suppliers.forEach(supplier => { %>
                        <div class="supplier-card" 
                            data-id="<%= supplier._id %>" 
                            data-name="<%= supplier.name %>" 
                            data-contact="<%= supplier.contactNumber %>" 
                            data-address="<%= supplier.address %>"
                            data-personToContact="<%= supplier.personToContact %>">
                            
                            <div class="card-header">
                                <span class="supplier-name"><%= supplier.name %></span>
                            </div>
                            
                            <p>Contact: <%= supplier.contactNumber %></p>
                            <p>Contact Person: <%= supplier.personToContact %></p>
                            
                            <div class="card-menu">
                                <i class="fas fa-ellipsis-h"></i>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <p>No suppliers found.</p>
                <% } %>
            </div>

            <div class="modal" id="supplierModal">
                <div class="modal-content">
                    <span class="close">&times;</span>
                    <h2>Add Supplier</h2>
                    <form id="supplierForm" action="/add-supplier" method="POST">
                        <div class="form-group">
                            <label for="supplierName">Supplier Name:</label>
                            <input type="text" id="supplierName" name="name" required>
                        </div>
                        <div class="form-group">
                            <label for="supplierAddress">Address:</label>
                            <input type="text" id="supplierAddress" name="address" required>
                        </div>
                        <div class="form-group">
                            <label for="supplierContactNumber">Contact Number:</label>
                            <input type="text" id="supplierContactNumber" name="contactNumber" required>
                        </div>
                        <div class="form-group">
                            <label for="supplierPersonToContact">Person to Contact:</label>
                            <input type="text" id="supplierPersonToContact" name="personToContact" required>
                        </div>
                        
                        <button type="submit">Add Supplier</button>
                    </form>
                </div>
            </div>

            <!-- Supplier On Click Modal -->
<div id="viewSupplierModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Supplier Details</h2>
        
        <form id="viewSupplierForm">
            <label for="name">Supplier Name</label>
            <input type="text" id="viewSupplierName" name="name" readonly>
            
            <label for="address">Address</label>
            <input type="text" id="viewSupplierAddress" name="address" readonly>
            
            <label for="contactNumber">Contact Number</label>
            <input type="text" id="viewSupplierContactNumber" name="contactNumber" readonly>
            
            <label for="personToContact">Person to Contact</label>
            <input type="text" id="viewSupplierPersonToContact" name="personToContact" readonly>
            
            <input type="hidden" id="viewSupplierId" name="id">
            
            <div class="button-group">
                <button type="button" id="editSupplierBtn">Edit</button>
                <button type="button" id="deleteSupplierBtn">Delete</button>
                <button type="button" id="applySupplierBtn">Apply</button>
            </div>
        </form>
            </div>
        </div>
      </section>
        </div>
    </div>
</body>

<script>
    // Get modal element
const modal = document.getElementById("supplierModal");
const addSupplierBtn = document.getElementById("addSupplierBtn");
const closeBtn = document.getElementsByClassName("close")[0];

addSupplierBtn.onclick = function() {
    modal.style.display = "block";
}

// Close the modal
closeBtn.onclick = function() {
    modal.style.display = "none";
}

// Close the modal when clicking outside of it
window.onclick = function(event) {
    if (event.target === modal) {
        modal.style.display = "none";
    }
}

// Select supplier modal and elements
const supplierCards = document.querySelectorAll(".supplier-card");
const viewSupplierModal = document.getElementById("viewSupplierModal");
const closeViewSupplierModal = viewSupplierModal.querySelector(".close");

const viewSupplierName = document.getElementById("viewSupplierName");
const viewSupplierAddress = document.getElementById("viewSupplierAddress");
const viewSupplierContactNumber = document.getElementById("viewSupplierContactNumber");
const viewSupplierPersonToContact = document.getElementById("viewSupplierPersonToContact");
const viewSupplierId = document.getElementById("viewSupplierId");

const editSupplierBtn = document.getElementById("editSupplierBtn");
const deleteSupplierBtn = document.getElementById("deleteSupplierBtn");
const applySupplierBtn = document.getElementById("applySupplierBtn");

// Populate modal fields with the clicked supplier's data
supplierCards.forEach(card => {
    card.addEventListener("click", () => {
        viewSupplierName.value = card.getAttribute("data-name");
        viewSupplierAddress.value = card.getAttribute("data-address");
        viewSupplierContactNumber.value = card.getAttribute("data-contact");
        viewSupplierPersonToContact.value = card.getAttribute("data-personToContact");
        viewSupplierId.value = card.getAttribute("data-id");

        disableFields();
        viewSupplierModal.style.display = "block";
    });
});

// Close modal
closeViewSupplierModal.addEventListener("click", () => {
    viewSupplierModal.style.display = "none";
});

window.addEventListener("click", (event) => {
    if (event.target === viewSupplierModal) {
        viewSupplierModal.style.display = "none";
    }
});

// Enable fields on edit
editSupplierBtn.addEventListener("click", () => {
    enableFields();
    applySupplierBtn.disabled = false;
});

// Handle "Apply" button to send updated data to the server
applySupplierBtn.addEventListener("click", async () => {
    const updatedSupplier = {
        _id: viewSupplierId.value,
        name: viewSupplierName.value,
        address: viewSupplierAddress.value,
        contactNumber: viewSupplierContactNumber.value,
        personToContact: viewSupplierPersonToContact.value
    };

    try {
        const response = await fetch('/update-supplier', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(updatedSupplier)
        });

        if (response.ok) {
            alert('Supplier updated successfully!');
            viewSupplierModal.style.display = 'none';
            location.reload(); // Reload to reflect changes
        } else {
            alert('Failed to update supplier.');
        }
    } catch (error) {
        console.error('Error updating supplier:', error);
        alert('An error occurred while updating supplier.');
    }
});

// Handle "Delete" button to delete the supplier
deleteSupplierBtn.addEventListener("click", async () => {
    const supplierId = viewSupplierId.value;

    if (confirm(`Are you sure you want to delete this supplier?`)) {
        try {
            const response = await fetch('/delete-supplier', {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ _id: supplierId })
            });

            if (response.ok) {
                alert('Supplier deleted successfully');
                viewSupplierModal.style.display = 'none';
                location.reload(); // Reload or update the supplier UI
            } else {
                alert('Failed to delete supplier');
            }
        } catch (error) {
            console.error('Error deleting supplier:', error);
            alert('An error occurred while deleting supplier.');
        }
    }
});

// Helper functions to enable/disable fields
function disableFields() {
    viewSupplierName.readOnly = true;
    viewSupplierAddress.readOnly = true;
    viewSupplierContactNumber.readOnly = true;
    viewSupplierPersonToContact.readOnly = true;
    applySupplierBtn.disabled = true;
}

function enableFields() {
    viewSupplierName.readOnly = false;
    viewSupplierAddress.readOnly = false;
    viewSupplierContactNumber.readOnly = false;
    viewSupplierPersonToContact.readOnly = false;
    applySupplierBtn.disabled = false;
}

// Close modal when clicking outside of it
window.onclick = function(event) {
    if (event.target === viewEditModal) {
        viewEditModal.style.display = "none";
    }
};

</script>

</html>
