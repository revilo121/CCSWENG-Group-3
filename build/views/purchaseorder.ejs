<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Purchase Orders</title>
    <link rel="stylesheet" href="/assets/purchaseorder-style.css">
    <link rel="stylesheet" href="/assets/sidebar.css">
    <link rel="stylesheet" href="/assets/topbar.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" async>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&display=swap" rel="stylesheet" async>
</head>

<body>
    <%- include('partials/topbar') %>

    <div class="main-fb">
        <%- include('partials/sidebar') %>

        <div class="main-content">
            <h1>Purchase Order</h1>
            <!-- Order Status Section -->
            <section class="order-status">
                <div class="status for-approval">
                    <i class="fas fa-exclamation-circle"></i>
                    <div class="status-text">
                        <span class="status-label">For Approval</span>
                        <h2>5</h2>
                    </div>
                </div>
                <div class="status pending">
                    <i class="fas fa-exclamation-triangle"></i>
                    <div class="status-text">
                        <span class="status-label">Pending</span>
                        <h2>55</h2>
                    </div>
                </div>
                <div class="status completed">
                    <i class="fas fa-check-circle"></i>
                    <div class="status-text">
                        <span class="status-label">Completed (This month)</span>
                        <h2>555</h2>
                    </div>
                </div>
            </section>

            <!-- Purchase Orders Table Section -->
            <section class="inventory-table">
                <div class="purchase-order-controls">
                    <button class="create-purchase-order" onclick="openPurchaseOrderModal()">
                        <i class="fas fa-plus"></i> Create Purchase Order
                    </button>
                    <button class="edit-purchase-order" onclick="openEditPurchaseOrderModal()">
                        <i class="fas fa-edit"></i> Edit Purchase Order
                    </button>
                    <div class="search-bar">
                        <input type="text" placeholder="Search items..." aria-label="Search orders">
                        <i class="fas fa-search search-icon"></i>
                    </div>
                    <div class="sorting-controls">
                        <button class="sort"><i class="fas fa-sort"></i> Sort by</button>
                        <button class="filter"><i class="fas fa-filter"></i> Filter by</button>
                        <button class="pagination-btn prev"><i class="fas fa-chevron-left"></i></button>
                        <button class="pagination-btn next"><i class="fas fa-chevron-right"></i></button>
                    </div>
                </div>

                <!-- Order Grid -->
                <div class="order-grid" id="orderGrid">
                    <% purchaseorder.forEach(order => { %> 
                        <div class="item-card" data-id="<%= order._id %>">
                            <div class="card-header">
                                <span class="item-name"><%= order.item.itemName %></span>
                                <span class="item-dot"></span>
                            </div>
                            <p>Supplier: <%= order.supplier %></p>
                            <p>Branch: <%= order.item.branchStored %></p>
                            <p>Quantity: <%= order.item.quantity %></p>
                            <p>Cost: P<%= order.item.cost %></p>
                            <p>Created at: <%= order.createdAt.toDateString() %></p>
                            <div class="card-menu">
                                <i class="fas fa-ellipsis-h"></i>
                            </div>
                        </div>
                    <% }) %>
                </div>
            </section>
        </div>
    </div>

    <!-- Add Purchase Order Modal -->
    <div id="addPurchaseOrderModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closePurchaseOrderModal()">&times;</span>
            <h2>Create Purchase Order</h2>
            <form id="addPurchaseOrderForm" action="/add-purchase-order" method="POST">
                <label for="supplier">Supplier:</label>
                <input type="text" name="supplier" id="supplier" required>

                <label for="itemName">Item:</label>
                <select name="itemName" id="itemName" required onchange="updateBranchAndCost()">
                    <option value="">Select an item</option>
                    <% items.forEach(item => { %>
                        <option value="<%= item.name %>" data-price="<%= item.price %>" data-branch-stored="<%= item.branchStored %>"><%= item.name %></option>
                    <% }) %>
                </select>

                <label for="quantity">Quantity:</label>
                <input type="number" name="quantity" id="quantity" min="1" required oninput="updateBranchAndCost()">

                <label for="cost">Cost:</label>
                <input type="number" name="cost" id="cost" step="0.01" readonly required>

                <label>Branch Stored:</label>
                <span id="branchDisplay">None</span> 
                <input type="hidden" name="branchStored" id="branchStored">

                <button type="submit">Submit</button>
            </form>
        </div>
    </div>

    <!-- Edit Purchase Order Modal -->
    <div id="editPurchaseOrderModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeEditPurchaseOrderModal()">&times;</span>
        <h2>Edit Purchase Order</h2>
        <form id="editPurchaseOrderForm" action="/edit-purchase-order" method="POST">
            <label for="purchaseOrderSelect">Select Purchase Order:</label>
            <select name="purchaseOrder" id="purchaseOrderSelect" required onchange="populateEditForm()">
                <option value="">Select a purchase order</option>
                <% purchaseorder.forEach(order => { %>
                    <option value="<%= order._id %>" data-supplier="<%= order.supplier %>" 
                            data-item="<%= order.item.itemName %>" 
                            data-quantity="<%= order.item.quantity %>" 
                            data-cost="<%= order.item.cost %>" 
                            data-branch="<%= order.item.branchStored %>" 
                            data-price="<%= order.item.price %>"><%= order.item.itemName %> - Supplier: <%= order.supplier %></option>
                <% }) %>
            </select>

            <label for="editSupplier">Supplier:</label>
            <input type="text" name="supplier" id="editSupplier" required>

            <label for="editItemName">Item:</label>
            <input type="text" name="itemName" id="editItemName" required readonly>

            <label for="editQuantity">Quantity:</label>
            <input type="number" name="quantity" id="editQuantity" min="1" required oninput="updateEditCost()">

            <label for="editCost">Cost:</label>
            <input type="number" name="cost" id="editCost" step="0.01" required readonly>

            <label>Branch Stored:</label>
            <input type="text" name="branchStored" id="editBranchStored" required readonly>

            <button type="submit">Update</button>
        </form>
    </div>
</div>

    <script>
        // Modal open and close functionality
        const addPurchaseOrderModal = document.getElementById('addPurchaseOrderModal');
        const editPurchaseOrderModal = document.getElementById('editPurchaseOrderModal');

        function openPurchaseOrderModal() {
            addPurchaseOrderModal.style.display = 'block';
        }

        function closePurchaseOrderModal() {
            addPurchaseOrderModal.style.display = 'none';
        }

        function openEditPurchaseOrderModal() {
            editPurchaseOrderModal.style.display = 'block';
        }

        function closeEditPurchaseOrderModal() {
            editPurchaseOrderModal.style.display = 'none';
        }

        window.onclick = function(event) {
            if (event.target == addPurchaseOrderModal) {
                closePurchaseOrderModal();
            } else if (event.target == editPurchaseOrderModal) {
                closeEditPurchaseOrderModal();
            }
        }

        function updateCost() {
            const itemSelect = document.getElementById('itemName');
            const quantityInput = document.getElementById('quantity');
            const costInput = document.getElementById('cost');

            const selectedOption = itemSelect.options[itemSelect.selectedIndex];
            const price = parseFloat(selectedOption.getAttribute('data-price')) || 0;

            costInput.value = (price * quantityInput.value).toFixed(2);
        }

        function updateBranchAndCost() {
            const itemSelect = document.getElementById('itemName');
            const branchDisplay = document.getElementById('branchDisplay');
            const branchStoredInput = document.getElementById('branchStored');

            const selectedOption = itemSelect.options[itemSelect.selectedIndex];
            const branch = selectedOption.getAttribute('data-branch-stored') || 'None';
            branchDisplay.textContent = branch;
            branchStoredInput.value = branch;

            updateCost();
        }

        function populateEditForm() {
            const purchaseOrderSelect = document.getElementById('purchaseOrderSelect');
            const selectedOption = purchaseOrderSelect.options[purchaseOrderSelect.selectedIndex];

            const supplier = selectedOption.getAttribute('data-supplier');
            const item = selectedOption.getAttribute('data-item');
            const quantity = selectedOption.getAttribute('data-quantity');
            const cost = selectedOption.getAttribute('data-cost');
            const branch = selectedOption.getAttribute('data-branch');
            const price = selectedOption.getAttribute('data-price');

            document.getElementById('editSupplier').value = supplier;
            document.getElementById('editItemName').value = item;
            document.getElementById('editQuantity').value = quantity;
            document.getElementById('editCost').value = cost;
            document.getElementById('editBranchStored').value = branch;
        }

        function updateEditCost() {
            const quantityInput = document.getElementById('editQuantity');
            const price = document.querySelector(`#purchaseOrderSelect option:checked`).getAttribute('data-price');
            const costInput = document.getElementById('editCost');

            costInput.value = (price * quantityInput.value).toFixed(2);
        }
    </script>
</body>

</html>
